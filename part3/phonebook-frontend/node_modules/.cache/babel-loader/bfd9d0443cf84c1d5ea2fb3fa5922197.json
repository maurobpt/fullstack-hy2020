{"ast":null,"code":"var _jsxFileName = \"/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [message, setmessage] = useState(null);\n  const [messageType, setMessageType] = useState(null); // 'confirmation' or 'error'\n  // Application's effect\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n      setSearchResults(initialPersons);\n    });\n  }, []);\n  const [newName, setNewName] = useState('');\n\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value);\n\n  const [newNumber, setNewNumber] = useState('');\n\n  const setToNewNumber = () => setNewNumber(document.getElementById(\"number\").value); //console.log(persons);\n\n\n  const handleNameChange = event => {\n    setToNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setToNewNumber(event.target.value);\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = persons.filter(person => person.name.includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  const deleteName = event => {\n    event.preventDefault();\n    const id = parseInt(event.target.value);\n    const name = persons[id - 1].name;\n    personService.remove(persons[id - 1]) // prevent manual refresh\n    .catch(error => {\n      setMessageType('error');\n      setmessage(`Information of ${name} has already been removed from server`);\n      setTimeout(() => {\n        setmessage(null);\n        setMessageType('error');\n      }, 5000);\n      setPersons(persons.filter(n => n.id !== id));\n      setSearchResults(persons.filter(n => n.id !== id));\n    });\n    setPersons(persons.filter(n => n.id !== id));\n    setSearchResults(persons.filter(n => n.id !== id));\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const duplicateCheck = persons.find(person => person.name === newName);\n\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      personService.update(duplicateCheck.id, {\n        name: duplicateCheck.name,\n        number: newNumber\n      }).then(returnedPerson => {\n        if (window.confirm(`${returnedPerson.name} is already added to phonebook, \n            replace the old number with a new one?`)) {\n          setPersons(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson));\n          setSearchResults(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson));\n        }\n\n        setNewName('');\n        setNewNumber('');\n      });\n      return;\n    } else if (typeof duplicateCheck !== 'undefined') {\n      alert(`${newName} is already added to phonebook`);\n      setNewName('');\n      setNewNumber('');\n      return;\n    } // If the name is not in phonebook, add a new person\n\n\n    personService.create({\n      name: newName,\n      number: newNumber\n    }).then(response => {\n      setPersons(persons.concat(response));\n      setSearchResults(persons.concat(response));\n      setNewName('');\n      setNewNumber('');\n      setMessageType('confirmation');\n      setmessage(`Added ${response.name}`);\n      setTimeout(() => {\n        setMessageType(null);\n        setmessage(null);\n      }, 5000);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: message,\n    messageType: messageType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    onSubmit: addPerson,\n    valueName: newName,\n    onChangeName: handleNameChange,\n    valueNumber: newNumber,\n    onChangeNumber: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Persons, {\n    searchData: searchResults,\n    deleteName: deleteName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Filter","PersonForm","Persons","Notification","App","persons","setPersons","message","setmessage","messageType","setMessageType","getAll","then","initialPersons","setSearchResults","newName","setNewName","setToNewName","document","getElementById","value","newNumber","setNewNumber","setToNewNumber","handleNameChange","event","target","handleNumberChange","searchTerm","setSearchTerm","searchResults","handleChange","results","filter","person","name","includes","deleteName","preventDefault","id","parseInt","remove","catch","error","setTimeout","n","addPerson","duplicateCheck","find","number","update","returnedPerson","window","confirm","map","alert","create","response","concat","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n  const [message, setmessage] = useState(null)\n  const [messageType, setMessageType] = useState(null) // 'confirmation' or 'error'\n  // Application's effect\n  useEffect(() => {\n    personService\n    .getAll().then(initialPersons => {\n        setPersons(initialPersons);\n        setSearchResults(initialPersons);\n      })\n    }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value)\n  const [ newNumber, setNewNumber ] = useState('')\n  const setToNewNumber = () => setNewNumber(document.getElementById(\"number\").value)\n  //console.log(persons);\n  const handleNameChange = (event) => {\n    setToNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setToNewNumber(event.target.value);\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleChange = event => {\n      setSearchTerm(event.target.value);\n    };\n useEffect(() => {\n    const results = persons.filter(person =>\n      person.name.includes(searchTerm)\n    );\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  const deleteName = (event) => {\n    event.preventDefault()\n    const id = parseInt(event.target.value)\n    const name = persons[id -1].name\n    personService.remove(persons[id -1])\n    // prevent manual refresh\n    .catch(error => {\n      setMessageType('error')\n      setmessage(`Information of ${name} has already been removed from server`)\n      setTimeout(() => {\n        setmessage(null)\n        setMessageType('error')\n      }, 5000)\n      setPersons(persons.filter(n => n.id !== id))\n      setSearchResults(persons.filter(n => n.id !== id));\n    })\n    setPersons(persons.filter(n => n.id !== id))\n    setSearchResults(persons.filter(n => n.id !== id));\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const duplicateCheck = persons.find(person => person.name === newName)\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      personService\n        .update(duplicateCheck.id, { name: duplicateCheck.name, number: newNumber})\n        .then(returnedPerson => {\n          if (window.confirm(`${returnedPerson.name} is already added to phonebook, \n            replace the old number with a new one?`)) {\n            setPersons(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson))\n            setSearchResults(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson))\n          }\n          setNewName('')\n          setNewNumber('')\n        })\n        return\n    } else if (typeof duplicateCheck !== 'undefined') {\n        alert(`${newName} is already added to phonebook`)\n        setNewName('')\n        setNewNumber('')\n        return\n    }\n\n    // If the name is not in phonebook, add a new person\n    personService\n      .create({ name: newName, number: newNumber })\n      .then(response => {\n        setPersons(persons.concat(response))\n        setSearchResults(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setMessageType('confirmation')\n        setmessage(`Added ${response.name}`)\n        setTimeout(() => {\n          setMessageType(null)\n          setmessage(null)\n        }, 5000)\n      })\n    \n  }\n\n  return (\n    <div style={{margin:'4px'}}>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter value={searchTerm} onChange={handleChange} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} valueName={newName} onChangeName={handleNameChange} valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons searchData={searchResults} deleteName={deleteName}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}