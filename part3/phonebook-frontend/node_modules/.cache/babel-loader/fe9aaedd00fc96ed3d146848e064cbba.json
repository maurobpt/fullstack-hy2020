{"ast":null,"code":"var _jsxFileName = \"/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js\";\nimport React, { useState } from 'react';\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }\n}, props.text);\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    id: 0,\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value);\n\n  const handleNameChange = event => {\n    setToNewName(event.target.value); //console.log(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    let readyToAdd = true;\n    persons.map(person => {\n      if (person.name == newName) {\n        alert(person.name + \" is already added to phonebook\");\n        readyToAdd = false;\n      }\n    });\n\n    if (readyToAdd == true) {\n      const personObject = {\n        name: newName,\n        id: persons.length + 1\n      };\n      setPersons(persons.concat(personObject));\n      setNewName('');\n    }\n  };\n\n  function PersonsList() {\n    const listItems = persons.map(person => /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }\n    }, person.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, listItems);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    value: newName,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(PersonsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js"],"names":["React","useState","Button","props","handleClick","text","App","persons","setPersons","id","name","newName","setNewName","setToNewName","document","getElementById","value","handleNameChange","event","target","addPerson","preventDefault","readyToAdd","map","person","alert","personObject","length","concat","PersonsList","listItems","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Button =(props) =>(\n  <button onClick={props.handleClick}>{props.text}</button>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { id: 0, name: 'Arto Hellas' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value)\n  \n  const handleNameChange = (event) => {\n    setToNewName(event.target.value);\n    //console.log(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    let readyToAdd=true;\n    persons.map(person => {\n      if(person.name==newName){\n        alert(person.name + \" is already added to phonebook\");\n        readyToAdd=false;\n      }\n    })\n\n    if(readyToAdd==true){\n      const personObject = {\n        name: newName,\n        id: persons.length + 1,\n      };\n      setPersons(persons.concat(personObject));\n      setNewName('');\n    }\n    \n  }\n  function PersonsList() {\n    const listItems = persons.map(person => <div key={person.id}>{person.name}</div>);  return (\n      <div>{listItems}</div>  );\n  }\n\n  return (\n    <div style={{margin:'4px'}}>\n      <h2>Phonebook</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input id=\"name\" type=\"text\" value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n        <Button text=\"add\" />\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <PersonsList/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}