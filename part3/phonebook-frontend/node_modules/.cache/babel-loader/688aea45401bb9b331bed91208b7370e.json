{"ast":null,"code":"var _jsxFileName = \"/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]); // Application's effect\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response);\n      setSearchResults(response);\n    });\n  }, []);\n  const [newName, setNewName] = useState('');\n\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value);\n\n  const [newNumber, setNewNumber] = useState('');\n\n  const setToNewNumber = () => setNewNumber(document.getElementById(\"number\").value); //console.log(persons);\n\n\n  const handleNameChange = event => {\n    setToNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setToNewNumber(event.target.value);\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = persons.filter(person => person.name.includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  const deleteName = event => {\n    event.preventDefault();\n    const id = parseInt(event.target.value);\n    personService.remove(persons[id - 1]); // prevent manual refresh\n\n    setPersons(persons.filter(person => person.id !== id));\n    setSearchResults(persons.filter(person => person.id !== id));\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const duplicateCheck = persons.find(person => person.name === newName);\n\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      personService.update(duplicateCheck.id, {\n        name: duplicateCheck.name,\n        number: newNumber\n      }).then(returnedPerson => {\n        if (window.confirm(`${returnedPerson.name} is already added to phonebook, \n            replace the old number with a new one?`)) {\n          setPersons(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson));\n          setSearchResults(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson));\n        }\n\n        setNewName('');\n        setNewNumber('');\n      });\n      return;\n    } else if (typeof duplicateCheck !== 'undefined') {\n      alert(`${newName} is already added to phonebook`);\n      setNewName('');\n      setNewNumber('');\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Filter, {\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    onSubmit: addPerson,\n    valueName: newName,\n    onChangeName: handleNameChange,\n    valueNumber: newNumber,\n    onChangeNumber: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Persons, {\n    searchData: searchResults,\n    deleteName: deleteName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/maurobrandao/git/fullstack-hy2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Filter","PersonForm","Persons","App","persons","setPersons","getAll","then","response","setSearchResults","newName","setNewName","setToNewName","document","getElementById","value","newNumber","setNewNumber","setToNewNumber","handleNameChange","event","target","handleNumberChange","searchTerm","setSearchTerm","searchResults","handleChange","results","filter","person","name","includes","deleteName","preventDefault","id","parseInt","remove","addPerson","duplicateCheck","find","number","update","returnedPerson","window","confirm","map","alert","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n\n  // Application's effect\n  useEffect(() => {\n    personService\n    .getAll().then(response => {\n        setPersons(response);\n        setSearchResults(response);\n      })\n    }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const setToNewName = () => setNewName(document.getElementById(\"name\").value)\n  const [ newNumber, setNewNumber ] = useState('')\n  const setToNewNumber = () => setNewNumber(document.getElementById(\"number\").value)\n  //console.log(persons);\n  const handleNameChange = (event) => {\n    setToNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setToNewNumber(event.target.value);\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleChange = event => {\n      setSearchTerm(event.target.value);\n    };\n useEffect(() => {\n    const results = persons.filter(person =>\n      person.name.includes(searchTerm)\n    );\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  const deleteName = (event) => {\n    event.preventDefault()\n    const id = parseInt(event.target.value)\n    personService.remove(persons[id -1])\n    // prevent manual refresh\n    setPersons(persons.filter(person => person.id !== id ))\n    setSearchResults(persons.filter(person => person.id !== id ))\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const duplicateCheck = persons.find(person => person.name === newName)\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      personService\n        .update(duplicateCheck.id, { name: duplicateCheck.name, number: newNumber})\n        .then(returnedPerson => {\n          if (window.confirm(`${returnedPerson.name} is already added to phonebook, \n            replace the old number with a new one?`)) {\n            setPersons(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson))\n            setSearchResults(persons.map(person => person.id !== duplicateCheck.id ? person : returnedPerson))\n          }\n          setNewName('')\n          setNewNumber('')\n        })\n        return\n    } else if (typeof duplicateCheck !== 'undefined') {\n        alert(`${newName} is already added to phonebook`)\n        setNewName('')\n        setNewNumber('')\n        return\n    }\n    \n  }\n\n  return (\n    <div style={{margin:'4px'}}>\n      <h2>Phonebook</h2>\n      <Filter value={searchTerm} onChange={handleChange} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} valueName={newName} onChangeName={handleNameChange} valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons searchData={searchResults} deleteName={deleteName}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}